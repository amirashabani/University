grammar SONEC;

program: TOKEN*;
TOKEN: ID | KEYWORD_WHILE | KEYWORD_IF | KEYWORD_THEN | KEYWORD_ELSE | KEYWORD_BEGIN | KEYWORD_END | KEYWORD_QUEUE | KEYWORD_STACK | KEYWORD_POST | KEYWORD_LINK | KEYWORD_NODE | KEYWORD_FEEDBACK | KEYWORD_TRUE | KEYWORD_FALSE | NUMBER | STRING | OPERATORS | COMMENT | KEYWORD_PRINT | KEYWORD_INPUT | KEYWORD_ASSIGN | KEYWORD_LOAD | KEYWORD_SAVE | OPENING_BRACE | CLOSING_BRACE | OPENING_PARENTHEISIS | CLOSING_PARENTHEISIS | OPENING_BRACKET | CLOSING_BRACKET | KEYWORD_IN | KEYWORD_DEF | KEYWORD_RETURN | KEYWORD_STRING | KEYWORD_NUMBER | KEYWORD_BOOL | KEYWORD_OWNER | KEYWORD_DESTINATION | KEYWORD_PUSH | KEYWORD_POP | KEYWORD_LEN | KEYWORD_CRAWL | KEYWORD_INGOING_LINKS | KEYWORD_OUTGOING_LINKS; 
KEYWORD_WHILE: W H I L E;
KEYWORD_IF: I F;
KEYWORD_THEN: T H E N;
KEYWORD_ELSE: E L S E;
KEYWORD_BEGIN: B E G I N;
KEYWORD_END: E N D;
KEYWORD_QUEUE: Q U E U E;
KEYWORD_STACK: S T A C K;
KEYWORD_SET: S E T;
KEYWORD_FEEDBACK: F E E D B A C K;
KEYWORD_POST: P O S T;
KEYWORD_LINK: L I N K;
KEYWORD_NODE: N O D E;
KEYWORD_TRUE: T R U E;
KEYWORD_FALSE: F A L S E;
KEYWORD_PRINT: P R I N T;
KEYWORD_INPUT: I N P U T;
KEYWORD_ASSIGN: '=';
KEYWORD_LOAD: L O A D;
KEYWORD_SAVE: S A V E;
KEYWORD_IN: I N;
KEYWORD_DEF: D E F;
KEYWORD_RETURN: R E T U R N;
KEYWORD_STRING: S T R I N G;
KEYWORD_NUMBER: N U M B E R;
KEYWORD_BOOL: B O O L;
KEYWORD_OWNER: O W N E R;
KEYWORD_DESTINATION: D E S T I N A T I O N;
KEYWORD_SOURCE: S O U R C E;
KEYWORD_PUSH: P U S H;
KEYWORD_POP: P O P;
KEYWORD_LEN: L E N;
KEYWORD_CRAWL: C R A W L;
KEYWORD_INGOING_LINKS: I N G O I N G '-' L I N K S;
KEYWORD_OUTGOING_LINKS: O U T G O I N G '-' L I N K S;
OPENING_BRACE:'{';
CLOSING_BRACE:'}';
OPENING_PARENTHEISIS:'(';
CLOSING_PARENTHEISIS:')';
OPENING_BRACKET:'[';
CLOSING_BRACKET:']';
NUMBER: DECIMAL | HEXADECIMAL | FLOAT;
DECIMAL: [0-9]+;
HEXADECIMAL: '0x'[0-9A-Fa-f]+;
FLOAT: ([0-9]+'.'[0-9]*) | ([0-9]*'.'[0-9]+);
STRING: '"' ( '""' | ~["\r\n] )* '"';
OPERATORS: EQUAL_OPERATORS | RELATIONAL_OPERATORS | LOGICAL_OPERATORS | MOD_OPERATOR | ARITHMETIC_OPERATORS;
EQUAL_OPERATORS: '=='|'!=';
RELATIONAL_OPERATORS: '<='|'<'|'>'|'>=';
LOGICAL_OPERATORS: X O R | A N D | O R | N O T;
MOD_OPERATOR: '%';
ARITHMETIC_OPERATORS: '*' | '/' | '+' | '-';
COMMENT: SINGLE_COMMENT | MULTIPLE_COMMENT;
SINGLE_COMMENT: '#'(.*);
MULTIPLE_COMMENT: '##'(('\n' | .)*)'##';
A:('a'|'A');
B:('b'|'B');
C:('c'|'C');
D:('d'|'D');
E:('e'|'E');
F:('f'|'F');
G:('g'|'G');
H:('h'|'H');
I:('i'|'I');
J:('j'|'J');
K:('k'|'K');
L:('l'|'L');
M:('m'|'M');
N:('n'|'N');
O:('o'|'O');
P:('p'|'P');
Q:('q'|'Q');
R:('r'|'R');
S:('s'|'S');
T:('t'|'T');
U:('u'|'U');
V:('v'|'V');
W:('w'|'W');
X:('x'|'X');
Y:('y'|'Y');
Z:('z'|'Z');
ID: [a-zA-Z][a-zA-Z0-9]*;
WS: [ \n\t\r]+ -> skip;
